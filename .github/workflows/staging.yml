name: Staging

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'README.md'

env:
  REGISTRY: ghcr.io
  ENVIRONMENT: nonprod
  IMAGE_NAME: ${{ github.repository }}
  # IMAGE_TAG: ${{ github.ref_name }}
  RELEASE: simple-node-app

jobs:
  build-and-push:
    name: Build and push
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set image tag in environment
        run: echo "IMAGE_TAG=${{ github.ref_name }}-$(git rev-parse --short $GITHUB_SHA)" >> $GITHUB_ENV

      - name: Log in to the container registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build image
        run: docker build . --tag ${{env.REGISTRY}}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}

      - name: Push image
        run: docker push ${{env.REGISTRY}}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}

  deploy:
    needs: build-and-push

    name: Deploy
    runs-on: ubuntu-latest
    container: "alpine/helm:3.7.1"

    outputs:
      app_url: ${{ steps.deploy.outputs.app_url }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set kubeconfig
        run: mkdir ~/.kube && echo "${{ secrets.KUBECONFIG }}" > ~/.kube/config

      - name: Deploy to AKS
        working-directory: helm
        id: deploy
        run: |
          helm upgrade ${{ env.RELEASE }} ./chart \
            --install \
            --create-namespace \
            -n ${{ env.ENVIRONMENT }} \
            -f staging.values.yml \
            --set image.tag=${{ env.IMAGE_TAG }} \
            --wait | tee out.txt

          echo "::set-output name=app_url::$(cat out.txt | tail -n1 | xargs)"

  verify:
    needs: deploy

    name: Verify app
    runs-on: ubuntu-latest
    container: "curlimages/curl:7.80.0"

    steps:
      - name: nslookup
        timeout-minutes: 10
        run: |
          set +e

          nslookup ${{ needs.deploy.outputs.app_url }}

          while [ $? -ne 0 ]
          do
            sleep 30
            nslookup ${{ needs.deploy.outputs.app_url }}
          done

      - name: curl
        run: curl ${{ needs.deploy.outputs.app_url }}
